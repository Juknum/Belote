
    // Phase d'Enchère
void enchere(int encherisseur){
	espace_vide(1);

	printf("Phase d'enchères...\n\n");

	printf("Vos cartes :");
	for(int i = 0; i < 8; i++){
		printf(" %s",dictionnaire(cartes_joueur[i]));
	}
	printf("\n\n");

	switch(encherisseur){
		case 1: // Joueur
			break;
		case 2: // Ouest
			ia_enchere(2);
			break;
		case 3: // Nord
			ia_enchere(3);
			break;
		case 4: // Est
		    ia_enchere(4);
			break;
		default:
			printf("Erreur dans le choix du 1er encherisseur");
			break;
	}

	int type_enchere;
	int choix_couleur;   ////////// a mettre en globale //////////
	char atout;          ////////// a mettre en globale //////////

	/* l'encherisseur choisit la couleur de l'atout*/

	printf("Choisissez la couleur de l atout:\n");
	printf("1: couleur unique\n");
	printf("2: Tout Atout (TA)\n");
	printf("3: Sans Atout (SA)\n");

	scanf("%d",&type_enchere);

	switch(type_enchere){
        case 1: //une seule couleur est choisit comme Atout
            printf("Choisissez une des quatre couleurs de l'Atout.\n");
            printf("Veuillez saisir une des quatre couleurs?\n Trefle(1)\n Pique(2)\n Carreau(3)\n Coeur(4)\n ");

            scanf("%d",&choix_couleur);

            while(choix_couleur < 1 || choix_couleur > 4){
                printf("Veuillez choisir une des couleurs en marquant le nombre qui lui est attribué");
                printf("Veuillez saisir une des quatre couleurs?\n Trefle(1)\n Pique(2)\n Carreau(3)\n Coeur(4)\n ");
                scanf("%d",&choix_couleur);
            }
                break;

        case 2: /*toute les coueleurs sont atout*/
                atout = 'T';
                break;

         case 3: /*toute les coueleurs sont atout*/
                atout = 'S';
                break;
         default :
                printf("Erreur dans les encheres");
            }

}

void attributions_des_couleurs_par_atouts(  choix_couleur ){


tab_Atout[0] = 20;
tab_Atout[1] = 14;
tab_Atout[2] = 11;
tab_Atout[3] = 10;
tab_Atout[4] = 4;
tab_Atout[5] = 3;
tab_Atout[6] = 0;

switch(choix_couleur){ /* prendre les cases du tableau dans le dictionnaire */
        case 1:
            7♣ = tab_Atout[6];
            8♣ = tab_Atout[6];
            9♣ = tab_Atout[1];
            10♣ = tab_Atout[3];
            V♣ = tab_Atout[0];
            D♣ = tab_Atout[5];
            R♣ = tab_Atout[4];
            AS♣ = tab_Atout[2];
            break;
        case 2:
            7♠ = tab_Atout[6];
            8♠ = tab_Atout[6];
            9♠ = tab_Atout[1];
            10♠ = tab_Atout[3];
            V♠ = tab_Atout[0];
            D♠ = tab_Atout[5];
            R♠ = tab_Atout[4];
            AS♠ = tab_Atout[2];
            break;
        case 3:
             7♦ = tab_Atout[6];
            8♦ = tab_Atout[6];
            9♦ = tab_Atout[1];
            10♦ = tab_Atout[3];
            V♦= tab_Atout[0];
            D♦ = tab_Atout[5];
            R♦ = tab_Atout[4];
            AS♦ = tab_Atout[2];
            break;
        case 4:
            7♥ = tab_Atout[6];
            8♥= tab_Atout[6];
            9♥ = tab_Atout[1];
            10♥ = tab_Atout[3];
            V♥ = tab_Atout[0];
            D♥ = tab_Atout[5];
            R♥ = tab_Atout[4];
            AS♥ = tab_Atout[2];
            break;
        default :
            printf("Erreur dans l'attribution des atouts");
            break;

}


}


void couleur_des_atouts(){

if(&choix_couleur == 1 ){
    printf("Les trefles sont les atouts "); /* donnez ls valeur des cartes*/

}else{ if (&choix_couleur == 2){
            printf("Les piques sont les atouts");

    } else {if (&choix_couleur ==3){
            printf("Les carreaux sont les atouts");

        }else { if (&choix_couleur == 4){
                printf("Les coeurs sont les atouts");

            }else { if (&atout == 'T'){
                    printf("Toutes les couleurs sont des atouts");

                }else { if (&atout == 'S'){
                        printf("il n'y a pas d'atout");

                    }else{
                    printf("Erreur dans l'attributions des couleurs");


                    }
                }
            }
        }
    }
}

return 0;
}
